Const TYPES_INTEGER=0
Const TYPES_STRING =1
Const TYPES_MESSAGE=2
//kenties voisi säilöä myös muistipaloja tai muita tyyppejä jne.

Const TYPES_DEFAULT_INCREMENT=4


//yleistyyppi muistipaloihin säilömistä varten
Type TYPES_generalType
	Field WhatAmI as Integer '0 integer, 1 string 
	Field str as String
	Field int as Integer
	Field mem 		'messageiden toteutus memblockilla
End Type

function TYPES_setString(t,str)
	t\TYPES_generalType=converttotype(t)
	t.str=str
	return t //palautetaan aina vaikkei tarvisi, koska siitä voi silti hyötyä
endfunction

function TYPES_new(typenumber)
	t\TYPES_generalType= New(TYPES_generalType)
	t.WhatAmI=typenumber
	if typenumber=GAMES_MESSAGE then 'alustetaan viestin muistipala 
		t.mem=makememblock(4*(1+TYPES_DEFAULT_INCREMENT))
		pokeint t.mem,0,0
	endif
	return converttointeger(t)
End Function

function TYPES_getMessageLength(t)
	mem=TYPES_getMemBlock(t)
	return peekInt(mem,0)
EndType

function TYPES_increaseMessageLength(messageType)
	mem=TYPES_getMemBlock(messageType)
	size=peekint(mem,0)+1
	pokeint mem, 0, size	
	if memblocksize(mem)*4=size then 
		mem2=makememblock((size+1)*4)
		memcopy mem,0,mem2,0,memblocksize(mem)
		mem=mem2
	endif
	TYPES_setMemBlock(messageType,mem)
	return mem
End Function

function TYPES_addToMessage(message,typeToAdd)
	mem=TYPES_getMemBlock(message)
	mem=TYPES_increaseMessageLength(mem) 'otetaan paluu muuttumisen varalta
	pokeInt mem, TYPES_getMessageLength(t), typeToAdd
	TYPES_setMemBlokc(message,mem)
End Function

function TYPES_getMessageItem(message,i)
	mem=TYPES_getMemBlock(message)
	peekint(mem,(i+1)*4)
End Function

function TYPES_getMemBlock(t)
	t\TYPES_generalType=converttotype(t)
	return t.mem
End Function

function TYPES_setMemBlock(t,mem)
	t\TYPES_generalType=converttotype(t)
	t.mem=mem
	return t
End Function

function TYPES_setInt(t,int)
	t\TYPES_generalType=converttotype(t)
	t.int=int
	return t
End Function

function Types_getInt(t)
	t\TYPES_generalType=converttotype(t)
	return t.int
End Function

function TYPES_getString(t)
	t\TYPES_generalType=converttotype(t)
	return t.str
End Function


function TYPES_typeOf(t)
	t\TYPES_generalType=converttotype(t)
	return t.WhatAmI
End Function
