//T‰m‰ muuttuja sis‰lt‰‰ pelien yhteism‰‰r‰n (t‰ytyy m‰‰ritell‰ ennen pelien lataamista)
Global MAIN_GameCount

//T‰m‰ muuttuja pit‰‰ sis‰ll‰‰n k‰ynniss‰ olevan pelin ID:n
Global MAIN_RunningGameID As String 

//T‰ss‰ kohtaa ladataan KAIKKI minipelit
Include "Games/AX00/TestGame.CB"
Include "Games/ME00/SpaceMiners.CB"


//T‰m‰ tyyppikokoelma pit‰‰ listaa kaikista peleist‰ ja niiden tiedoista
Type MAIN_Game
	Field ID$
	Field Name$
	Field Desc$
	Field Controls$
	Field PlayerSetup$
	Field MaxPlayers
	Field Logo
EndType


//Lis‰‰ pelin pelikokoelmaan. Lis‰tiedot luetaan gamedata.ini tiedostosta
Function API_AddGame(ID$)
	//Tarkistetaan, ettei peli‰ ole viel‰ lis‰tty
	For iG.MAIN_Game = Each MAIN_Game
		If iG\ID = ID Then MakeError "Pelikokoelmassa on samalla tunnisteella pelej‰: " + ID + "!"
	Next iG
	
	//Ladataan tiedot
	If Not FileExists("Games/" + ID + "/gameinfo.ini") Then MakeError "Pelilt‰ " + ID + " puuttuu asetustiedosto!"		
	MAIN_ParseSettings("Games/" + ID + "/gameinfo.ini")
	
	//Lis‰t‰‰n tiedot pelikokoelmaan
	nG.MAIN_Game = New(MAIN_Game)
	nG\ID = ID
	nG\Name = MAIN_GetSetting("Name")
	nG\Desc = MAIN_GetSetting("Desc")
	nG\Controls = MAIN_GetSetting("Controls")
	nG\PlayerSetup = Upper(Str(MAIN_GetSetting("PlayerSetup")))
	nG\MaxPlayers = Int(MAIN_GetSetting("MaxPlayers"))
	
	//Tarkistetaan, ettei samannimist‰ peli‰ ole viel‰ lis‰tty
	For iG.MAIN_Game = Each MAIN_Game
		If iG <> nG And iG\Name = nG\Name Then MakeError "Pelikokoelmassa on samannimisi‰ pelej‰: " + Name + "! (" + nG\ID + " ja " + iG\ID + ")"
	Next iG
	
	//Tutkitaan puuttuvat tiedot ja aiheutetaan virheilmoitus, jos puuttuu pakollisia tietoja
	If ID = "" Then MakeError "Pelill‰ ei ole nime‰!"
	err$ = "Minipelin " + ID + " tietoja puuttuu: "
	If nG\Name = "" Then err = err + "nimi, "
	If nG\Desc = "" Then err = err + "selite, "
	If nG\Controls = "" Then err = err + "n‰pp‰inselite, "
	If nG\PlayerSetup = "" Then err = err + "pelaajien kokoonpano, "
	If Not FileExists("Games/" + ID + "/logo.png") Then err = err + "logo.png, "
	
	If err <> "Minipelin " + ID + " tietoja puuttuu: " Then MakeError Left(err, Len(err) - 2) + "!"
	
	//Lis‰t‰‰n oletustiedot, jos puuttuu vapaaehtoisia tietoja
	If nG\MaxPlayers = 0 Then nG\MaxPlayers = 4
	
	nG\Logo = LoadImage("Games/" + ID + "/logo.png")
	
	MAIN_GameCount = MAIN_GameCount + 1
EndFunction


//Hakee kokoelmasta pelin ja palauttaa sen osoitteen
Function MAIN_GetGame(ID$)
	For iG.MAIN_Game = Each MAIN_Game
		If iG\ID = ID Then Return ConvertToInteger(iG)
	Next iG
EndFunction


//Pelivalitsin / p‰‰valikko
//n‰ytt‰‰ kokoelman pelit ja k‰ynnist‰‰ ne niiden logoa klikkaamalla
Function MAIN_SelectGame()
	GameData = API_MakeGameData()
	API_PutData(GameData, API_PlayerCount, MAIN_PlayerAmount)
	API_PutData(GameData, API_PlayerSetup, "ALLvsALL")
	
	marginBig = 20
	marginSmall = 2
	logoSize = 100
	rowHeight = 20 
	
	Repeat
		Text marginBig,marginBig,"Pelikokoelmassa on seuraavat pelit: "
	
		gameCount = 0
		
		mx = API_MouseX()
		my = API_MouseY()
		
		DrawGame
		
		Color 255, 255, 255
		
		For iG.MAIN_Game = Each MAIN_Game

			If (MAIN_PlayerAmount < iG\MaxPlayers) Then 
			
				y = marginBig + rowHeight + gameCount * (100 + marginBig/2)
	
				//onko hiiri pelin p‰‰ll‰
				If( API_MouseInBox(marginBig-marginSmall,y-marginSmall,API_RenderW-marginBig*2,logoSize+marginSmall*2)) Then
					If( MouseHit(1)) Then MAIN_Start(iG\ID, GameData)
					Box marginBig-marginSmall,y-marginSmall,API_RenderW-marginBig*2,logoSize+marginSmall*2,0
				EndIf 
	
				DrawImage iG\Logo ,marginBig, y
			
				Text marginBig*3/2+logoSize,y+rowHeight,iG\ID + " " + iG\Name
				Text marginBig*3/2+logoSize,y+rowHeight*2,iG\Desc
				Text marginBig*3/2+logoSize,y+rowHeight*3,iG\Controls
				Text marginBig*3/2+logoSize,y+rowHeight*4,iG\PlayerSetup + " " + iG\MaxPlayers
				
				gameCount = gameCount + 1
			
			EndIf 
		Next iG
		
		mediaCount = 0
		For iM.MAIN_Media = Each MAIN_Media
			mediaCount = mediaCount + 1
			Text 10, 260 + mediaCount * 15, iM\FileName
		Next iM
		Text 0, 260, "Ladattua mediaa: " + mediaCount
		
		API_DrawScreen()
	Forever
EndFunction 


//Aloittaa pelin
Function MAIN_Start(ID$, GameData)
	API_ResetToDefaults()
	MAIN_RunningGameID = ID$
	Select ID
		Case "AX00"
			AX00_Game(GameData)
		Case "ME00"
			ME00_Game(GameData)
		Default
			MakeError "Peli‰ " + Name + " ei lˆytynyt!"
	EndSelect
	MAIN_ClearMedia("*CLONE")
	MAIN_RunningGameID = ""
	API_ResetToDefaults()
EndFunction


//GameData-palikkaan tallennettavat tiedot (huom. jos muutat, muuta myˆs GetData ja WriteData funktioiden select-caseja)
Const API_PlayerCount = 0
Const API_PlayerSetup = 1
//Sis‰lt‰‰ GameData-palikan koon
Const API_BlockSize = 2

//Luo GameData-muistipalan
Function API_MakeGameData()
	Return MakeMEMBlock(API_BlockSize * 4)
EndFunction


//Palauttaa tiedon muistipalasta
Function API_GetData(GameData, DataToGet)
	If (DataToGet >= API_BlockSize) Then Return -1
	
	Value = PeekInt(GameData, DataToGet * 4)
	Select DataToGet
		Case 1  //API_PlayerSetup
			Select Value
				Case 0
					Return "ALLvsALL"
				Case 1
					Return "1vsALL"
				Case 2
					Return "TEAMvs"
				Default
					Return ""
			EndSelect
		Default
			Return Value
	EndSelect
EndFunction


//Kirjoittaa tiedon muistipalaan (Value on merkkijono, mutta voi sis‰lt‰‰ myˆs numeron)
Function API_PutData(GameData, DataToWrite, Value$)
	If (DataToWrite >= API_BlockSize) Then Return -1
	
	Select DataToWrite
		Case 1  //API_PlayerSetup
			Select Value
				Case "ALLvsALL"
					Value = 0
				Case "1vsALL"
					Value = 1
				Case "TEAMvs"
					Value = 2
				Default
					Value = -1
			EndSelect
	EndSelect
	PokeInt GameData, DataToWrite * 4, Int(Value)
EndFunction
