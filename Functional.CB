//Näytön piirtämiseen ja skaalaamiseen tarvittavia muuttujia
Global API_RenderW, API_RenderH, MAIN_RenderZoom
Global MAIN_ScreenW, MAIN_ScreenH
Global MAIN_MidImage, MAIN_FinImage, MAIN_ScreenOffsetX, MAIN_ScreenOffsetY

// Vaihtaa renderöintiresoluutiota
Function MAIN_Resolution(w, h)
	API_RenderW = w
	API_RenderH = h
	
	MAIN_RenderZoom = Min(RoundDown(Float(MAIN_ScreenW) / API_RenderW), RoundDown(Float(MAIN_ScreenH) / API_RenderH))
	Print "W: " + Float(MAIN_ScreenW) / API_RenderW
	Print "H: " + Float(MAIN_ScreenH) / API_RenderH
	
	If MAIN_ScreenW <> API_RenderW Or MAIN_ScreenH <> API_RenderH Then
		If MAIN_MidImage Then DeleteImage MAIN_MidImage
		MAIN_MidImage = MakeImage(API_RenderW, API_RenderH * MAIN_RenderZoom)
		MAIN_FinImage = MakeImage(API_RenderW * MAIN_RenderZoom, API_RenderH * MAIN_RenderZoom)
		MAIN_ScreenOffsetX = (MAIN_ScreenW - API_RenderW * MAIN_RenderZoom) / 2
		MAIN_ScreenOffsetY = (MAIN_ScreenH - API_RenderH * MAIN_RenderZoom) / 2
	EndIf
EndFunction


// Asettaa näytön resoluution
// Korvaa Screen komennon
Function MAIN_Screen(Width = 0, Height = 0, Windowed = 0)
	// Natiiviresoluutio jos 0, 0
	If (Width = 0 And Height = 0) Then
	   SCREEN 0, 0, 0, 0
	   MAIN_ScreenW = ScreenWidth()
	   MAIN_ScreenH = ScreenHeight()
	Else
		MAIN_ScreenW = Width
		MAIN_ScreenH = Height
		
		If Not GFXModeExists(MAIN_ScreenW, MAIN_ScreenH, 32) Then Windowed = 1
	EndIf
	
	// Aseta samoiksi ettei jää nollaan
	If API_RenderW = 0 Or API_RenderH = 0 Then
		API_RenderW = MAIN_ScreenW
		API_RenderW = MAIN_ScreenW
		MAIN_RenderZoom = 1
	EndIf
	
	SCREEN MAIN_ScreenW, MAIN_ScreenH, 0, Windowed
	
	//TODO: lataa aina tarvittavat kuvat ja äänet uudestaan
EndFunction 


//Piirtää ja skaalaa API_RenderW x API_RenderH kokoisen alueen ruudulta
Function API_DrawScreen()

	//TODO: Virheilmoitukset jotka ei kaada koko ohjelmaa
	
	//TODO: Pause
	
	//TODO: Käyttöliittymäkomponentit
	
	//TODO: Simuloi hiirtä kokoruudulla

	//Skaalataan vain jos ruudun koko ei vastaa haluttua
	If MAIN_ScreenW <> API_RenderW Or MAIN_ScreenH <> API_RenderH Then
		For y = 0 To API_RenderH - 1
			CopyBox 0,  y, API_RenderW, 1, 0, y * MAIN_RenderZoom + i, SCREEN(), Image(MAIN_MidImage)
		Next y
		
		Cls 
		DrawToWorld OFF, OFF
		
		For x = 0 To API_RenderW - 1
			CopyBox x, 0, 1, API_RenderH * MAIN_RenderZoom, x * MAIN_RenderZoom + i, 0, Image(MAIN_MidImage), Image(MAIN_FinImage)
		Next x
		
		DestinationX = (MAIN_ScreenW - API_RenderW * MAIN_RenderZoom) / 2
		DestinationY = (MAIN_ScreenH - API_RenderH * MAIN_RenderZoom) / 2
		For y = DestinationY To DestinationY + MAIN_RenderZoom - 1
			For x = DestinationX To DestinationX + MAIN_RenderZoom - 1
				DrawImage MAIN_FinImage, x, y
			Next x
		Next y
	EndIf
	
	SetWindow "FPS: " + FPS()
	
	DrawScreen
EndFunction	



//Hiiren x-koordinaatti renderöintikoordinaatistossa
Function API_MouseX()
	Return (MouseX()- MAIN_ScreenOffsetX) / MAIN_RenderZoom 
EndFunction 

//Hiiren y-koordinaatti renderöintikoordinaatistossa
Function API_MouseY()
	Return (MouseY()- MAIN_ScreenOffsetY) / MAIN_RenderZoom 
EndFunction 

//Palauttaa 1 jos hiiri on renderöintikoordinaatistossa
//alueen päällä, hyvä käyttää käyttöliittymäelementeissä
Function API_MouseInBox(x,y,w,h)
	mx = API_MouseX()
	my = API_MouseY()
	Return (mx >= x And mx < x+w And my >= y And my< y+h)
EndFunction 



//Värjää kuvan pelaajan tunnusvärillä
//Erityisesti harmaasävyisille kuville
//Palauttaa kuvan 
Function API_Recolor(number, img, overlayImg = 0)

	If (number >= 0 And number < MAIN_MAX_PLAYERS) Then
	
		player = MAIN_PlayerData(number)
		
		col = PeekInt(player,MAIN_PLAYER_COLOR)
	
		//Pelaajan värin suhteellinen voimakkuus 0.0 - 1.0
		redAmount#   = Float(PeekByte(col,RED))   / 255.0
		greenAmount# = Float(PeekByte(col,GREEN)) / 255.0
		blueAmount#  = Float(PeekByte(col,BLUE))  / 255.0
		
		If ( img <> 0 ) Then 
		
			//lukittu kuva että saadaan nopeutta
			Lock Image(img)
				For x=0 To ImageWidth(img)-1
					For y=0 To ImageHeight(img)-1
					
						//pikselista RGB
						pixel = GetPixel2 (x,y,Image(img))
						
						pixel = pixel Shl 8
						r = pixel Shr 24
						
						pixel = pixel Shl 8
						g = pixel Shr 24
						
						pixel = pixel Shl 8
						b = pixel Shr 24 
						
						// kerrotaan kukin pikseliarvo suhteellisella voimakkuudella
						r = Float(r) * redAmount# 
						g = Float(g) * greenAmount# 
						b = Float(b) * blueAmount# 
						
						//RGB:stä pikseli
						pixel = b + (g Shl 8) + (r Shl 16) + (255 Shl 24)
						
						PutPixel2 x,y,pixel,Image(img)
						
					Next y
				Next x
			Unlock Image(img)
			
			//Lisätään päälle toinen kuva jos se on annettu
			If (overlayImg <> 0) Then
				DrawToImage img
					DrawImage overlayImg, 0, 0
				DrawToScreen
			EndIf
		EndIf 
		
	EndIf 
	
	Return img
EndFunction 

