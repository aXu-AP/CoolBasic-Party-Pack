
//Näytön piirtämiseen ja skaalaamiseen tarvittavia muuttujia
Global API_RenderW, API_RenderH, API_RenderZoom
Global API_ScreenW, API_ScreenH
Global MAIN_MidImage, MAIN_ScreenOffsetX, MAIN_ScreenOffsetY

//Kutakuinkin jokainen minipeli pitää kirjaa pelaajien pisteistä. Ettei jokaiseen minipeliin tarvitse tehdä omaa taulukkoa/muistipalaa tai
//muuta tapaa tallentaa väliaikaispisteitä, luodaan kaikille peleille yhteinen taulukko.
Dim API_PlayerScore(3)                          //Tähän tallennetaan pelaajien väliaikaiset pisteet

// Tästä taulukosta löytyy pelaajien värit
// voidaan käyttää CoolBasicin omia RED, GREEN ja BLUE vakioita
// komponettien erottamiseen. Ensimmäinen numero on pelaajan numero
// Esim. API_PlayerColor(2,RED)	 

Dim API_PlayerColor(3,3) As Byte 	


// vaihtaa renderöintiresoluutiota
Function API_Resolution(w, h)

	API_RenderW = w
	API_RenderH = h

	API_RenderZoom = Min(RoundDown(Float(API_ScreenW) / API_RenderW), RoundDown(Float(API_ScreenH) / API_RenderH))

	If API_ScreenW <> API_RenderW Or API_ScreenH <> API_RenderH Then
	
		If MAIN_MidImage Then DeleteImage MAIN_MidImage
		MAIN_MidImage = MakeImage(API_RenderW, API_RenderH * API_RenderZoom)
		MAIN_ScreenOffsetX = (API_ScreenW - API_RenderW * API_RenderZoom) / 2
		MAIN_ScreenOffsetY = (API_ScreenH - API_RenderH * API_RenderZoom) / 2
		
	EndIf

EndFunction

//Piirtää ja skaalaa API_RenderW x API_RenderH kokoisen alueen ruudulta
Function API_DrawScreen()

	//Skaalataan vain jos ruudun koko ei vastaa haluttua
	If API_ScreenW <> API_RenderW Or API_ScreenH <> API_RenderH Then
		For y = 0 To API_RenderH - 1
			For i = 0 To API_RenderZoom
				CopyBox 0,  y, API_RenderW, 1, 0, y * API_RenderZoom + i, SCREEN(), Image(MAIN_MidImage)
			Next i
		Next y
		
		Color 0, 0, 0
		Box 0, 0, API_ScreenW, API_ScreenH
		DrawToWorld OFF
		
		For x = 0 To API_RenderW - 1
			For i = 0 To API_RenderZoom
				
				DestinationX = Int(CameraX()) + x * API_RenderZoom + i - API_ScreenW / 2 + MAIN_ScreenOffsetX
				DestinationY = Int(-CameraY()) 							- API_ScreenH / 2 + MAIN_ScreenOffsetY
			
				CopyBox x, 0, API_RenderZoom, API_RenderH * API_RenderZoom, DestinationX, DestinationY, Image(MAIN_MidImage), SCREEN()
				
			Next i
		Next x
	EndIf
	
	DrawScreen
EndFunction	

//Korvaa LoadImage
//TODO: virheidenkäsittely kun tiedostoa ei löydy
Function API_LoadImage(file$)
	Return LoadImage(file$) 
End Function

//Korvaa MakeObjectFloorin
Function API_MakeObjectFloor()
	Return MakeObjectFloor() 
End Function



//Värjää kuvan pelaajan tunnusvärillä
//Väri haetaan API_PlayerColor taulukosta
//Erityisesti harmaasävyisille kuville
//Palauttaa kuvan 
Function API_Recolor(img, playerNumber)

	//Pelaajan värin suhteellinen voimakkuus 0.0 - 1.0
	redAmount#   = Float(API_PlayerColor(playerNumber,RED))   / 255.0
	greenAmount# = Float(API_PlayerColor(playerNumber,GREEN)) / 255.0
	blueAmount#  = Float(API_PlayerColor(playerNumber,BLUE))  / 255.0
	
	If ( img <> 0 ) Then 

		//lukittu kuva että saadaan nopeutta
		Lock Image(img)
			For x=0 To ImageWidth(img)-1
				For y=0 To ImageHeight(img)-1
				
					//pikselista RGB
					pixel = GetPixel2 (x,y,Image(img))
					
					pixel = pixel Shl 8
					r = pixel Shr 24
					
					pixel = pixel Shl 8
					g = pixel Shr 24
					
					pixel = pixel Shl 8
					b = pixel Shr 24 
					
					// kerrotaan kukin pikseliarvo suhteellisella voimakkuudella
					r = Float(r) * redAmount# 
					g = Float(g) * greenAmount# 
					b = Float(b) * blueAmount# 
					
					//RGB:stä pikseli
					p = b + (g Shl 8) + (r Shl 16) + (255 Shl 24)
					
					PutPixel2 x,y,p,Image(img)
					
				Next y
			Next x
		Unlock Image(img)
	
	EndIf 

	Return img
End Function 


// asettaa näytön resoluution
// Korvaa Screen komennon
Function API_Screen( Width=0, Height=0, Windowed=0)

	If (Width=0 And Height=0) Then
	   SCREEN 0, 0, 0, 0
	   API_ScreenW = ScreenWidth()
	   API_ScreenH = ScreenHeight()
	   
	Else
		API_ScreenW = Width
		API_ScreenH = Height
		
		If Not GFXModeExists(API_ScreenW, API_ScreenH, 32) Then Windowed = 1
	EndIf
	
	// aseta samoiksi ettei jää nollaan
	API_RenderW = API_ScreenW
	API_RenderW = API_ScreenW
	
	SCREEN API_ScreenW, API_ScreenH, 0, Windowed
	
	//TODO: lataa aina tarvittavat kuvat ja äänet uudestaan
	
EndFunction 